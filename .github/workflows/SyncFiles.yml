# This is a basic workflow to help you get started with Actions

name: Syncing Testing Between 2 Independent Repos
#Thanks to https://github.com/marketplace/actions/github-repo-sync (need to figure out how to cite, use properly)
#https://github.com/marketplace/actions/github-repo-sync
# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
#Test Add
jobs:
  unsetting:
    runs-on: ubuntu-latest
    steps:
      - run: unset $(git rev-parse --local-env-vars)
  convert-and-commit:
    runs-on: ubuntu-latest
    needs: [unsetting]
    steps:
      - name: Commit changes
      - uses: EndBug/add-and-commit@v4 # You can change this to use a specific version
        with:
          # The arguments for the `git add` command (see the paragraph below for more info)
          # Default: '.'
          add: '.'

          # The name of the user that will be displayed as the author of the commit
          # Default: author of the commit that triggered the run
          author_name: Your Name

          # The email of the user that will be displayed as the author of the commit
          # Default: author of the commit that triggered the run
          author_email: mail@example.com

          # The local path to the directory where your repository is located. You should use actions/checkout first to set it up
          # Default: '.'
         # cwd: '.'

          # Whether to use the --force option on `git add`, in order to bypass eventual gitignores
          # Default: false
          force: true

          # The message for the commit
          # Default: 'Commit from GitHub Actions'
          message: 'Your commit message'

          # Name of the branch to use, if different from the one that triggered the workflow
          # Default: the branch that triggered the workflow (from GITHUB_REF)
          ref: 'student-release'

          # The arguments for the `git rm` command (see the paragraph below for more info)
          # Default: ''
          #remove: "./dir/old_file.js"

        env:
          # This is necessary in order to push a commit to the repo
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Leave this line unchanged
  repo-sync:
    runs-on: ubuntu-latest
    needs: [convert-and-commit]
    steps:
    - name: repo-sync
      uses: wei/git-sync@v2
      with:
        source_repo: "https://github.com/vspenubarthi/SyncTesting_1.git"
        source_branch: "student-release"
        destination_repo: "git@github.com:vspenubarthi/SyncTesting_2.git"
        destination_branch: "master"
        ssh_private_key: ${{ secrets.SSH_PRIVATE_KEY }}
  # This workflow contains a single job called "build"
#   build:
#     # The type of runner that the job will run on
#     runs-on: ubuntu-latest

#     # Steps represent a sequence of tasks that will be executed as part of the job
#     steps:
#     # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
#     - uses: actions/checkout@v2
      
#     - name: Git Sync Action
#     - uses: wei/git-sync@v2.0.0


#     # Runs a single command using the runners shell
#    # - name: Run a one-line script
#     #  run: echo Hello, world!

#     # Runs a set of commands using the runners shell
#     #- name: Run a multi-line script
#      # run: |
#       #  echo Add other actions to build,
#        # echo test, and deploy your project.
